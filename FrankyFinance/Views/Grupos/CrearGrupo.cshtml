@model FrankyFinance.Models.Group
@inject IHttpContextAccessor HttpContextAccessor


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Group</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link href="~/css/style.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <!-- Contenedor principal -->
    <div class="container mt-5">
        <!-- Título de la página -->
        <h1 class="text-white">Create a New Group</h1>
        <p class="hidden">UserId: @HttpContextAccessor.HttpContext?.Session.GetInt32("UserId")</p>


        <!-- Formulario para crear un nuevo grupo -->
        <form asp-action="CrearGrupo" method="post" id="create-group-form">
            @Html.AntiForgeryToken() <!-- Token de seguridad CSRF -->
            <!-- Campo para el nombre del grupo -->
            <div class="mb-3">
                <label asp-for="Name" class="form-label"></label>
                <input asp-for="Name" class="form-control" style="background-color: #212529; color: white;" />
                <span asp-validation-for="Name" class="text-danger" ></span>
            </div>

            <!-- Campo para la descripción del grupo -->
            <div class="mb-3">
                <label asp-for="Description" class="form-label text-white"></label>
                <textarea asp-for="Description" class="form-control" style="background-color: #212529; color: white;"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <!-- Botón para enviar el formulario -->
            <button type="submit" class="btn btn-primary" id="submit-button">Create Group</button>
        </form>
    </div>

    <!-- Script para manejar el formulario y mostrar SweetAlert2 -->
    <script>
        document.getElementById("create-group-form").addEventListener("submit", function (event) {
            event.preventDefault(); // Evita el envío automático del formulario

            const form = this;

            fetch(form.action, {
                method: "POST",
                body: new FormData(form)
            })
                .then(response => {
                    if (response.ok) {
                        Swal.fire({
                            title: "Group Created!",
                            text: "The group has been created successfully.",
                            icon: "success"
                        }).then(() => {
                            window.location.href = "/Account/Dashboard"; // Redirección después de éxito
                        });
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: "Failed to create the group. Please try again.",
                            icon: "error"
                        });
                    }
                })
                .catch(() => {
                    Swal.fire({
                        title: "Error!",
                        text: "An unexpected error occurred.",
                        icon: "error"
                    });
                });
        });
    </script>
</body>
</html>
